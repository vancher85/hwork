# # 1. С помощью итератора(генератор списков, который возвращает итератор (...)) распаковать списки в линейный:
# lst = [[[1, 2, 3],[1, 2, 3],[1, 2, 3]], [[1, 2, 3],[1, 2, 3],[1, 2, 3]], [[1, 2, 3],[1, 2, 3],[1, 2, 3]]]
# # Пример вызова:
# # unpacked = (....)
# # print(unpacked)
# # >>> <generator object rec.<locals>.<genexpr> at 0x7ff5156b7570>
# # print(list(unpacked))
# # >>> [1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3]
# # -------------------------------------------------------------------------------------------------------
# # 2. Написать lambda функцию, которая принимает на вход дикт и название файла, форматирует его в json и записывает в файл.
# # Для преобразования dict -> json изучите модуль json из стандартной библиотеки python.
# # Пример вызова:
# # json_writer({'key': 'value'}, 'example.json')
# # Дикт {'key': 'value'} должен быть записан в файл example.json
# # -------------------------------------------------------------------------------------------------------
# # 3. Еще раз оптимизировать рекурсию. Перевести ее на генераторы списков. Результатом должен вернуться итератор.
# a = [
#     {
#         (1, 2): [
#             {'b': 1, 'c': 2},
#             'hello world'
#         ],
#         'b': {'d': 3}
#     },
#     4,
#     5,
#     ['hello', 'again']
# ]
# def rec(a):
#     result = []
#     if isinstance(a, (list, tuple)):
#         for i in a:
#             result.extend(rec(i))
#         return result
#     if isinstance(a, dict):
#         for i, j in a.items():
#             result.extend(rec(i))
#             result.extend(rec(j))
#         return result
#     return [a]
# # Пример вызова:
# # print(rec(a))
# # >>> <generator object rec.<locals>.<genexpr> at 0x7ff5156b7570>
# # print(list(rec(a)))
# # >>> [1, 2, 'b', 1, 'c', 2, 'hello world', 'b', 'd', 3, 4, 5, 'hello', 'again']